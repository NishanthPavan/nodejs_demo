//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.dreamsyssoft.aarestdemo;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.TextView;
import com.dreamsyssoft.aarestdemo.R.id;
import com.dreamsyssoft.aarestdemo.R.layout;
import com.dreamsyssoft.aarestdemo.model.User;
import com.dreamsyssoft.aarestdemo.rest.UserManager_;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class EditUserActivity_
    extends EditUserActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String USER_EXTRA = "user";

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        userManager = new UserManager_();
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_edit_user);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static EditUserActivity_.IntentBuilder_ intent(Context context) {
        return new EditUserActivity_.IntentBuilder_(context);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        txtState = ((TextView) hasViews.findViewById(id.txtState));
        txtName = ((TextView) hasViews.findViewById(id.txtName));
        txtCity = ((TextView) hasViews.findViewById(id.txtCity));
        btnSubmit = ((Button) hasViews.findViewById(id.btnSubmit));
        if (hasViews.findViewById(id.btnSubmit)!= null) {
            hasViews.findViewById(id.btnSubmit).setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    EditUserActivity_.this.onSubmit();
                }

            }
            );
        }
        init();
    }

    @SuppressWarnings("unchecked")
    private<T >T cast_(Object object) {
        return ((T) object);
    }

    private void injectExtras_() {
        Intent intent_ = getIntent();
        Bundle extras_ = intent_.getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(USER_EXTRA)) {
                try {
                    user = cast_(extras_.get(USER_EXTRA));
                } catch (ClassCastException e) {
                    Log.e("EditUserActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, EditUserActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public EditUserActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

        public EditUserActivity_.IntentBuilder_ user(User user) {
            intent_.putExtra(USER_EXTRA, ((Serializable) user));
            return this;
        }

    }

}
